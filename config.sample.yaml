# SEO Content Optimizer Configuration Sample
# Copy this file to 'config.yaml' and update with your actual credentials
# Important: Never commit config.yaml to version control (it contains sensitive API keys)

ai:
  # ============================================================================
  # AI Provider Selection
  # ============================================================================
  # Choose one of: openai, azure, anthropic, openai_compatible
  # For Liara.ir, LM Studio, Ollama, or other OpenAI-compatible APIs, use: openai_compatible
  provider: openai_compatible

  # ============================================================================
  # Common Settings (Applied to all providers)
  # ============================================================================
  
  # Model name to use
  # Examples:
  #   - openai/gpt-4o-mini (for OpenAI-compatible)
  #   - gpt-4o-mini (for direct OpenAI)
  #   - claude-3-sonnet (for Anthropic)
  model: openai/gpt-4o-mini
  
  # Temperature (0.0 = deterministic, 1.0 = creative)
  # Recommended: 0.0 for SEO content analysis (consistency)
  temperature: 0.0
  
  # Use JSON response format for structured outputs
  # Keep true for reliable parsing
  response_json: true
  
  # API timeout in seconds
  # Increase if experiencing timeout errors
  timeout_seconds: 60
  
  # Number of retries on API failure
  # Automatic retry with exponential backoff
  max_retries: 3
  
  # Base delay for exponential backoff (seconds)
  # Actual delay: retry_base_delay * (2 ^ attempt)
  retry_base_delay: 1.5
  
  # Queries per second rate limit
  # Adjust based on your API plan limits
  # Example: 1.0 = 1 request per second, 0.5 = 1 request every 2 seconds
  qps: 1.0

  # ============================================================================
  # OpenAI Configuration (Direct API)
  # ============================================================================
  # Use these settings if provider = openai
  
  # Your OpenAI API key from https://platform.openai.com/api-keys
  openai_api_key: "sk-YOUR_OPENAI_KEY_HERE"
  
  # OpenAI API base URL (usually don't need to change)
  openai_base_url: "https://api.openai.com/v1"

  # ============================================================================
  # Azure OpenAI Configuration
  # ============================================================================
  # Use these settings if provider = azure
  
  # Your Azure OpenAI resource endpoint
  # Format: https://YOUR-RESOURCE-NAME.openai.azure.com
  azure_endpoint: "https://YOUR-RESOURCE-NAME.openai.azure.com"
  
  # Your Azure OpenAI API key
  azure_api_key: "YOUR_AZURE_KEY_HERE"
  
  # API version (check Azure docs for latest)
  azure_api_version: "2024-02-15-preview"
  
  # Your deployment name in Azure
  azure_deployment: "gpt-4o-mini"

  # ============================================================================
  # Anthropic Configuration (Claude)
  # ============================================================================
  # Use these settings if provider = anthropic
  
  # Your Anthropic API key from https://console.anthropic.com/
  anthropic_api_key: "sk-ant-YOUR_ANTHROPIC_KEY_HERE"
  
  # API version
  anthropic_api_version: "2023-06-01"

  # ============================================================================
  # OpenAI-Compatible / Local LLM Configuration
  # ============================================================================
  # Use these settings if provider = openai_compatible
  # Works with: Liara.ir, LM Studio, Ollama, LocalAI, vLLM, etc.
  
  # Base URL for OpenAI-compatible API
  # Examples:
  #   - Liara.ir: https://ai.liara.ir/api/YOUR_PROJECT_ID/v1
  #   - LM Studio: http://localhost:1234/v1
  #   - Ollama: http://localhost:11434/v1
  compatible_base_url: "https://ai.liara.ir/api/YOUR_PROJECT_ID/v1"
  
  # API key (if required by the service)
  # For local LLMs without authentication, use any dummy value
  compatible_api_key: "YOUR_API_KEY_HERE"

# ==============================================================================
# Application Settings
# ==============================================================================
app:
  # NOTE: sitemap_url is NO LONGER REQUIRED here!
  # The application will prompt you interactively for the sitemap URL
  # You can still set it here if you want a default, but it will be ignored
  # in favor of interactive input.
  
  # Minimum position to consider for content opportunities
  # Queries ranking worse than this position will be analyzed
  # Recommended: 10 (beyond first page of Google results)
  min_position: 10
  
  # Semantic similarity threshold for keyword clustering (0.0-1.0)
  # Higher = stricter clustering (fewer, more focused clusters)
  # Lower = looser clustering (more clusters with related keywords)
  # Recommended: 0.7
  clustering_threshold: 0.7
  
  # Maximum number of H2/H3 headings per article suggestion
  # Controls the depth of AI-generated article outlines
  # Recommended: 8
  max_headings_per_article: 8
  
  # NOTE: input_excel_path is NO LONGER REQUIRED!
  # The application will prompt you to select files from the input/ folder
  
  # Output directory for generated Excel files
  # Default: output (will be created if it doesn't exist)
  output_directory: "output"

# ==============================================================================
# Configuration Notes
# ==============================================================================
# 
# 1. Copy this file to config.yaml:
#    cp config.sample.yaml config.yaml
#
# 2. Edit config.yaml with your actual credentials
#
# 3. Never commit config.yaml to git (it's already in .gitignore)
#
# 4. For Liara.ir users:
#    - Get your project ID from Liara dashboard
#    - Get your API key from AI section
#    - Set provider to: openai_compatible
#    - Use URL format: https://ai.liara.ir/api/YOUR_PROJECT_ID/v1
#
# 5. Test your configuration:
#    python3 test_connection.py
#
# 6. Run the application:
#    python3 main.py
#
# ==============================================================================
